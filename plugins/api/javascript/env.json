[{"label":"decodeURIComponent","insertText":{"value":"decodeURIComponent"},"documentation":"The decodeURIComponent function computes a new version of a URI in which each escape sequence and UTF-8 encoding of the sort that might be introduced by the encodeURIComponent function is replaced with the character that it represents.","kind":1},{"label":"encodeURIComponent","insertText":{"value":"encodeURIComponent"},"documentation":"The encodeURIComponent function computes a new version of a URI in which each instance of certain characters is replaced by one, two, three, or four escape sequences representing the UTF-8 encoding of the character.","kind":1},{"label":"decodeURI","insertText":{"value":"decodeURI"},"documentation":"The decodeURI function computes a new version of a URI in which each escape sequence and UTF-8 encoding of the sort that might be introduced by the encodeURI function is replaced with the character that it represents. Escape sequences that could not have been introduced by encodeURI are not replaced.","kind":1},{"label":"parseInt","insertText":{"value":"parseInt"},"documentation":"The parseInt function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading white space in string is ignored. If radix is undefined or 0, it is assumed to be 10 except when the number begins with the character pairs 0x or 0X, in which case a radix of 16 is assumed.","kind":1},{"label":"encodeURI","insertText":{"value":"encodeURI"},"documentation":"The encodeURI function computes a new version of a URI in which each instance of certain characters is replaced by one, two, three, or four escape sequences representing the UTF-8 encoding of the character.","kind":1},{"label":"parseFloat","insertText":{"value":"parseFloat"},"documentation":"The parseFloat function produces a Number value dictated by interpretation of the contents of the string argument as a decimal literal.","kind":1},{"label":"isFinite","insertText":{"value":"isFinite"},"documentation":"Returns false if the argument coerces to NaN, +∞, or −∞, and otherwise returns true.","kind":1},{"label":"isNaN","insertText":{"value":"isNaN"},"documentation":"Returns true if the argument coerces to NaN, and otherwise returns false.","kind":1},{"label":"eval","insertText":{"value":"eval"},"documentation":"15.1.2.1 eval (x)\r\n\r\n        When the eval function is called with one argument x, the following steps are taken:\r\n\r\n        \r\n          If Type(x) is not String, return x.\r\n          Let prog be the ECMAScript code that is the result of parsing x as a Program. If the parse\r\n              fails, throw a SyntaxError exception (but see also clause 16).\r\n          Let evalCtx be the result of establishing a new execution context (10.4.2) for the\r\n              eval code prog.\r\n          Let result be the result of evaluating the program prog.\r\n          Exit the running execution context evalCtx, restoring the previous execution context.\r\n          If result.type is normal and its completion value is a value\r\n              V, then return the value V.\r\n          If result.type is normal and its completion value is empty, then return the value undefined.\r\n          Otherwise, result.type must be throw. Throw result.value\r\n              as an exception.\r\n        \r\n\r\n        \r\n          15.1.2.1.1 Direct Call to\r\n              Eval\r\n\r\n          A direct call to the eval function is one that is expressed as a CallExpression that meets\r\n          the following two conditions:\r\n\r\n          The Reference that is the result of evaluating the MemberExpression in\r\n          the CallExpression has an environment record as its base value and its reference name is \"eval\".\r\n\r\n          The result of calling the abstract operation GetValue with that Reference as the argument is the standard built-in function defined in 15.1.2.1.","kind":1},{"label":"undefined","insertText":{"value":"undefined"},"documentation":"The value of undefined is undefined (see 8.1). This property has the attributes { [[Writable]]: false, [[Enumerable]]: false, [[Configurable]]: false }.","kind":9}]
