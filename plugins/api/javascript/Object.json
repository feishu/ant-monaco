{"methods":{"defineProperty":{"insertText":{"value":"defineProperty(${1:o: Object}, ${2:p: string}, ${3:attrs: any})"},"documentation":"The defineProperty function is used to add an own property and/or update the attributes of an existing own property of an object.","kind":1},"getOwnPropertyDescriptor":{"insertText":{"value":"getOwnPropertyDescriptor(${1:o: Object}, ${2:p: string})"},"documentation":"15.2.3.3\r\n            Object.getOwnPropertyDescriptor ( O, P )\r\n\r\n        When the getOwnPropertyDescriptor function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Let name be ToString(P).\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O with argument\r\n              name.\r\n          Return the result of calling FromPropertyDescriptor(desc) (8.10.4).","kind":1},"defineProperties":{"insertText":{"value":"defineProperties(${1:o: Object}, ${2:props: any})"},"documentation":"The defineProperties function is used to add own properties and/or update the attributes of existing own properties of an object.","kind":1},"create":{"insertText":{"value":"create(${1:o: Object}, ${2:properties?: any})"},"documentation":"The create function creates a new object with a specified prototype.","kind":1},"getOwnPropertyNames":{"insertText":{"value":"getOwnPropertyNames(${1:o: Object})"},"documentation":"15.2.3.4\r\n            Object.getOwnPropertyNames ( O )\r\n\r\n        When the getOwnPropertyNames function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Let array be the result of creating a new object as if by the expression new Array () where\r\n              Array is the standard built-in constructor with that name.\r\n          Let n be 0.\r\n          For each named own property P of O\r\n            \r\n              Let name be the String value that is the name of P.\r\n              Call the [[DefineOwnProperty]] internal method of array with arguments ToString(n), the PropertyDescriptor {[[Value]]: name, [[Writable]]:\r\n                  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\r\n              Increment n by 1.\r\n            \r\n          \r\n          Return array.\r\n        \r\n\r\n        \r\n          NOTE If O is a String instance, the set of own properties processed in step 4\r\n          includes the implicit properties defined in 15.5.5.2 that correspond to character positions\r\n          within the objectâ€™s [[PrimitiveValue]] String.","kind":1},"preventExtensions":{"insertText":{"value":"preventExtensions(${1:o: Object})"},"documentation":"15.2.3.10\r\n            Object.preventExtensions ( O )\r\n\r\n        When the preventExtensions function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.","kind":1},"getPrototypeOf":{"insertText":{"value":"getPrototypeOf(${1:o: Object})"},"documentation":"15.2.3.2 Object.getPrototypeOf (\r\n            O )\r\n\r\n        When the getPrototypeOf function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Return the value of the [[Prototype]] internal property of O.","kind":1},"isExtensible":{"insertText":{"value":"isExtensible(${1:o: Object})"},"documentation":"15.2.3.13 Object.isExtensible (\r\n            O )\r\n\r\n        When the isExtensible function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Return the Boolean value of the [[Extensible]] internal property of O.","kind":1},"isFrozen":{"insertText":{"value":"isFrozen(${1:o: Object})"},"documentation":"15.2.3.12 Object.isFrozen ( O\r\n            )\r\n\r\n        When the isFrozen function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If IsDataDescriptor(desc) is true then\r\n                \r\n                  If desc.[[Writable]] is true, return false.\r\n                \r\n              \r\n              If desc.[[Configurable]] is true, then return false.\r\n            \r\n          \r\n          If the [[Extensible]] internal property of O is false, then return true.\r\n          Otherwise, return false.","kind":1},"isSealed":{"insertText":{"value":"isSealed(${1:o: Object})"},"documentation":"15.2.3.11 Object.isSealed ( O\r\n            )\r\n\r\n        When the isSealed function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If desc.[[Configurable]] is true, then return false.\r\n            \r\n          \r\n          If the [[Extensible]] internal property of O is false, then return true.\r\n          Otherwise, return false.","kind":1},"freeze":{"insertText":{"value":"freeze(${1:o: Object})"},"documentation":"15.2.3.9 Object.freeze ( O )\r\n\r\n        When the freeze function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If IsDataDescriptor(desc) is true, then\r\n                \r\n                  If desc.[[Writable]] is true, set desc.[[Writable]] to false.\r\n                \r\n              \r\n              If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.\r\n              Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as\r\n                  arguments.\r\n            \r\n          \r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.","kind":1},"keys":{"insertText":{"value":"keys(${1:o: Object})"},"documentation":"15.2.3.14 Object.keys ( O )\r\n\r\n        When the keys function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If the Type(O) is not Object, throw a TypeError exception.\r\n          Let n be the number of own enumerable properties of O\r\n          Let array be the result of creating a new Object as if by the expression new Array(n) where\r\n              Array is the standard built-in constructor with that name.\r\n          Let index be 0.\r\n          For each own enumerable property of O whose name String is P\r\n            \r\n              Call the [[DefineOwnProperty]] internal method of array with arguments ToString(index), the PropertyDescriptor {[[Value]]: P, [[Writable]]:\r\n                  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\r\n              Increment index by 1.\r\n            \r\n          \r\n          Return array.\r\n        \r\n\r\n        If an implementation defines a specific order of enumeration for the for-in statement, that same enumeration order must\r\n        be used in step 5 of this algorithm.","kind":1},"seal":{"insertText":{"value":"seal(${1:o: Object})"},"documentation":"15.2.3.8 Object.seal ( O )\r\n\r\n        When the seal function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.\r\n              Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as\r\n                  arguments.\r\n            \r\n          \r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.","kind":1}},"entry":"Object"}
